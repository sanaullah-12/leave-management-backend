// Comprehensive test for the enhanced ZKTeco integration\nconst EnhancedZKTecoService = require('./services/enhancedZktecoService');\n\nasync function testEnhancedZKTeco() {\n  console.log('🚀 Starting Enhanced ZKTeco Integration Test...\\n');\n  \n  // Use your actual IP and port from environment or defaults\n  const deviceIp = process.env.ZKTECO_IP || '192.168.1.201';\n  const devicePort = parseInt(process.env.ZKTECO_PORT) || 4370;\n  \n  const zkService = new EnhancedZKTecoService(deviceIp, devicePort);\n  \n  try {\n    console.log('📡 Connecting to ZKTeco device...');\n    const connection = await zkService.connect();\n    console.log('✅ Connected successfully:', connection);\n    \n    console.log('\\n📋 Available Methods:');\n    const methods = zkService.getAvailableMethods();\n    console.log(methods.slice(0, 20)); // Show first 20 methods\n    \n    // Test users retrieval\n    console.log('\\n👥 Testing users retrieval...');\n    const users = await zkService.getUsers();\n    console.log(`✅ Retrieved ${users.length} users:`);\n    users.slice(0, 5).forEach((user, index) => {\n      console.log(`  ${index + 1}. UID: ${user.uid}, Name: ${user.name}, Card: ${user.cardno}`);\n    });\n    \n    // Test attendance retrieval\n    console.log('\\n📊 Testing attendance logs retrieval...');\n    const attendanceLogs = await zkService.getAttendanceLogs();\n    console.log(`✅ Retrieved ${attendanceLogs.length} attendance logs:`);\n    attendanceLogs.slice(0, 5).forEach((log, index) => {\n      console.log(`  ${index + 1}. UID: ${log.uid}, Time: ${log.timestamp}, Type: ${log.type}`);\n    });\n    \n    console.log('\\n🔌 Disconnecting...');\n    await zkService.disconnect();\n    console.log('✅ Disconnected successfully');\n    \n    console.log('\\n🎉 Enhanced ZKTeco Integration Test Completed Successfully!');\n    \n  } catch (error) {\n    console.error('❌ Test failed with error:', error.message);\n    console.error('Stack trace:', error.stack);\n  }\n}\n\n// Run the test\ntestEnhancedZKTeco().catch(console.error);\n